// Generated by mpgen from /home/zaidmstrr/bitcoin/src/ipc/capnp/chain.capnp

#include <chain.capnp.proxy-types.h>
#include <mp/proxy-types.h>

namespace mp {
ProxyClient<ipc::capnp::messages::Chain>::M0::Result ProxyClient<ipc::capnp::messages::Chain>::destroy(Super& super) {
    clientInvoke(super, &ipc::capnp::messages::Chain::Client::destroyRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::Chain>::M1::Result ProxyClient<ipc::capnp::messages::Chain>::getHeight() {
    typename M1::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getHeightRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_OPTIONAL>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M2::Result ProxyClient<ipc::capnp::messages::Chain>::getBlockHash(M2::Param<0> height) {
    typename M2::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getBlockHashRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Height, FIELD_IN>>(height), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M3::Result ProxyClient<ipc::capnp::messages::Chain>::haveBlockOnDisk(M3::Param<0> height) {
    typename M3::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::haveBlockOnDiskRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Height, FIELD_IN>>(height), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M4::Result ProxyClient<ipc::capnp::messages::Chain>::getTipLocator() {
    typename M4::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getTipLocatorRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M5::Result ProxyClient<ipc::capnp::messages::Chain>::getActiveChainLocator(M5::Param<0> blockHash) {
    typename M5::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getActiveChainLocatorRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::BlockHash, FIELD_IN | FIELD_BOXED>>(blockHash), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M6::Result ProxyClient<ipc::capnp::messages::Chain>::findLocatorFork(M6::Param<0> locator) {
    typename M6::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::findLocatorForkRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Locator, FIELD_IN | FIELD_BOXED>>(locator), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_OPTIONAL>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M7::Result ProxyClient<ipc::capnp::messages::Chain>::hasBlockFilterIndex(M7::Param<0> filterType) {
    typename M7::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::hasBlockFilterIndexRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::FilterType, FIELD_IN>>(filterType), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M8::Result ProxyClient<ipc::capnp::messages::Chain>::blockFilterMatchesAny(M8::Param<0> filterType,M8::Param<1> blockHash,M8::Param<2> filterSet) {
    typename M8::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::blockFilterMatchesAnyRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::FilterType, FIELD_IN>>(filterType), MakeClientParam<Accessor<chain_fields::BlockHash, FIELD_IN | FIELD_BOXED>>(blockHash), MakeClientParam<Accessor<chain_fields::FilterSet, FIELD_IN | FIELD_BOXED>>(filterSet), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_OPTIONAL>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M9::Result ProxyClient<ipc::capnp::messages::Chain>::findBlock(M9::Param<0> hash,M9::Param<1> block) {
    typename M9::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::findBlockRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Hash, FIELD_IN | FIELD_BOXED>>(hash), MakeClientParam<Accessor<chain_fields::Block, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(block), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M10::Result ProxyClient<ipc::capnp::messages::Chain>::findFirstBlockWithTimeAndHeight(M10::Param<0> minTime,M10::Param<1> minHeight,M10::Param<2> block) {
    typename M10::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::findFirstBlockWithTimeAndHeightRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::MinTime, FIELD_IN>>(minTime), MakeClientParam<Accessor<chain_fields::MinHeight, FIELD_IN>>(minHeight), MakeClientParam<Accessor<chain_fields::Block, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(block), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M11::Result ProxyClient<ipc::capnp::messages::Chain>::findAncestorByHeight(M11::Param<0> blockHash,M11::Param<1> ancestorHeight,M11::Param<2> ancestor) {
    typename M11::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::findAncestorByHeightRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::BlockHash, FIELD_IN | FIELD_BOXED>>(blockHash), MakeClientParam<Accessor<chain_fields::AncestorHeight, FIELD_IN>>(ancestorHeight), MakeClientParam<Accessor<chain_fields::Ancestor, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(ancestor), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M12::Result ProxyClient<ipc::capnp::messages::Chain>::findAncestorByHash(M12::Param<0> blockHash,M12::Param<1> ancestorHash,M12::Param<2> ancestor) {
    typename M12::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::findAncestorByHashRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::BlockHash, FIELD_IN | FIELD_BOXED>>(blockHash), MakeClientParam<Accessor<chain_fields::AncestorHash, FIELD_IN | FIELD_BOXED>>(ancestorHash), MakeClientParam<Accessor<chain_fields::Ancestor, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(ancestor), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M13::Result ProxyClient<ipc::capnp::messages::Chain>::findCommonAncestor(M13::Param<0> blockHash1,M13::Param<1> blockHash2,M13::Param<2> ancestor,M13::Param<3> block1,M13::Param<4> block2) {
    typename M13::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::findCommonAncestorRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::BlockHash1, FIELD_IN | FIELD_BOXED>>(blockHash1), MakeClientParam<Accessor<chain_fields::BlockHash2, FIELD_IN | FIELD_BOXED>>(blockHash2), MakeClientParam<Accessor<chain_fields::Ancestor, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(ancestor), MakeClientParam<Accessor<chain_fields::Block1, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(block1), MakeClientParam<Accessor<chain_fields::Block2, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(block2), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M14::Result ProxyClient<ipc::capnp::messages::Chain>::findCoins(M14::Param<0> coins) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::findCoinsRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Coins, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(coins));
}
ProxyClient<ipc::capnp::messages::Chain>::M15::Result ProxyClient<ipc::capnp::messages::Chain>::guessVerificationProgress(M15::Param<0> blockHash) {
    typename M15::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::guessVerificationProgressRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::BlockHash, FIELD_IN | FIELD_BOXED>>(blockHash), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M16::Result ProxyClient<ipc::capnp::messages::Chain>::hasBlocks(M16::Param<0> blockHash,M16::Param<1> minHeight,M16::Param<2> maxHeight) {
    typename M16::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::hasBlocksRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::BlockHash, FIELD_IN | FIELD_BOXED>>(blockHash), MakeClientParam<Accessor<chain_fields::MinHeight, FIELD_IN>>(minHeight), MakeClientParam<Accessor<chain_fields::MaxHeight, FIELD_IN | FIELD_OPTIONAL>>(maxHeight), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M17::Result ProxyClient<ipc::capnp::messages::Chain>::isRBFOptIn(M17::Param<0> tx) {
    typename M17::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::isRBFOptInRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Tx, FIELD_IN | FIELD_BOXED>>(tx), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M18::Result ProxyClient<ipc::capnp::messages::Chain>::isInMempool(M18::Param<0> txid) {
    typename M18::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::isInMempoolRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Txid, FIELD_IN | FIELD_BOXED>>(txid), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M19::Result ProxyClient<ipc::capnp::messages::Chain>::hasDescendantsInMempool(M19::Param<0> txid) {
    typename M19::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::hasDescendantsInMempoolRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Txid, FIELD_IN | FIELD_BOXED>>(txid), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M20::Result ProxyClient<ipc::capnp::messages::Chain>::broadcastTransaction(M20::Param<0> tx,M20::Param<1> maxTxFee,M20::Param<2> relay,M20::Param<3> error) {
    typename M20::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::broadcastTransactionRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Tx, FIELD_IN | FIELD_BOXED>>(tx), MakeClientParam<Accessor<chain_fields::MaxTxFee, FIELD_IN>>(maxTxFee), MakeClientParam<Accessor<chain_fields::Relay, FIELD_IN>>(relay), MakeClientParam<Accessor<chain_fields::Error, FIELD_OUT | FIELD_BOXED>>(error), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M21::Result ProxyClient<ipc::capnp::messages::Chain>::getTransactionAncestry(M21::Param<0> txid,M21::Param<1> ancestors,M21::Param<2> descendants,M21::Param<3> ancestorsize,M21::Param<4> ancestorfees) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getTransactionAncestryRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Txid, FIELD_IN | FIELD_BOXED>>(txid), MakeClientParam<Accessor<chain_fields::Ancestors, FIELD_OUT>>(ancestors), MakeClientParam<Accessor<chain_fields::Descendants, FIELD_OUT>>(descendants), MakeClientParam<Accessor<chain_fields::Ancestorsize, FIELD_OUT>>(ancestorsize), MakeClientParam<Accessor<chain_fields::Ancestorfees, FIELD_OUT>>(ancestorfees));
}
ProxyClient<ipc::capnp::messages::Chain>::M22::Result ProxyClient<ipc::capnp::messages::Chain>::calculateIndividualBumpFees(M22::Param<0> outpoints,M22::Param<1> targetFeerate) {
    typename M22::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::calculateIndividualBumpFeesRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Outpoints, FIELD_IN | FIELD_BOXED>>(outpoints), MakeClientParam<Accessor<chain_fields::TargetFeerate, FIELD_IN | FIELD_BOXED>>(targetFeerate), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M23::Result ProxyClient<ipc::capnp::messages::Chain>::calculateCombinedBumpFee(M23::Param<0> outpoints,M23::Param<1> targetFeerate) {
    typename M23::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::calculateCombinedBumpFeeRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Outpoints, FIELD_IN | FIELD_BOXED>>(outpoints), MakeClientParam<Accessor<chain_fields::TargetFeerate, FIELD_IN | FIELD_BOXED>>(targetFeerate), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_OPTIONAL>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M24::Result ProxyClient<ipc::capnp::messages::Chain>::getPackageLimits(M24::Param<0> ancestors,M24::Param<1> descendants) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getPackageLimitsRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Ancestors, FIELD_OUT>>(ancestors), MakeClientParam<Accessor<chain_fields::Descendants, FIELD_OUT>>(descendants));
}
ProxyClient<ipc::capnp::messages::Chain>::M25::Result ProxyClient<ipc::capnp::messages::Chain>::checkChainLimits(M25::Param<0> tx) {
    typename M25::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::checkChainLimitsRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Tx, FIELD_IN | FIELD_BOXED>>(tx), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M26::Result ProxyClient<ipc::capnp::messages::Chain>::estimateSmartFee(M26::Param<0> numBlocks,M26::Param<1> conservative,M26::Param<2> calc) {
    typename M26::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::estimateSmartFeeRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::NumBlocks, FIELD_IN>>(numBlocks), MakeClientParam<Accessor<chain_fields::Conservative, FIELD_IN>>(conservative), MakeClientParam<Accessor<chain_fields::Calc, FIELD_OUT | FIELD_REQUESTED | FIELD_BOXED>>(calc), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M27::Result ProxyClient<ipc::capnp::messages::Chain>::estimateMaxBlocks() {
    typename M27::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::estimateMaxBlocksRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M28::Result ProxyClient<ipc::capnp::messages::Chain>::mempoolMinFee() {
    typename M28::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::mempoolMinFeeRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M29::Result ProxyClient<ipc::capnp::messages::Chain>::relayMinFee() {
    typename M29::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::relayMinFeeRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M30::Result ProxyClient<ipc::capnp::messages::Chain>::relayIncrementalFee() {
    typename M30::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::relayIncrementalFeeRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M31::Result ProxyClient<ipc::capnp::messages::Chain>::relayDustFee() {
    typename M31::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::relayDustFeeRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M32::Result ProxyClient<ipc::capnp::messages::Chain>::havePruned() {
    typename M32::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::havePrunedRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M33::Result ProxyClient<ipc::capnp::messages::Chain>::getPruneHeight() {
    typename M33::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getPruneHeightRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_OPTIONAL>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M34::Result ProxyClient<ipc::capnp::messages::Chain>::isReadyToBroadcast() {
    typename M34::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::isReadyToBroadcastRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M35::Result ProxyClient<ipc::capnp::messages::Chain>::isInitialBlockDownload() {
    typename M35::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::isInitialBlockDownloadRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M36::Result ProxyClient<ipc::capnp::messages::Chain>::shutdownRequested() {
    typename M36::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::shutdownRequestedRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M37::Result ProxyClient<ipc::capnp::messages::Chain>::initMessage(M37::Param<0> message) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::initMessageRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Message, FIELD_IN | FIELD_BOXED>>(message));
}
ProxyClient<ipc::capnp::messages::Chain>::M38::Result ProxyClient<ipc::capnp::messages::Chain>::initWarning(M38::Param<0> message) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::initWarningRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Message, FIELD_IN | FIELD_BOXED>>(message));
}
ProxyClient<ipc::capnp::messages::Chain>::M39::Result ProxyClient<ipc::capnp::messages::Chain>::initError(M39::Param<0> message) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::initErrorRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Message, FIELD_IN | FIELD_BOXED>>(message));
}
ProxyClient<ipc::capnp::messages::Chain>::M40::Result ProxyClient<ipc::capnp::messages::Chain>::showProgress(M40::Param<0> title,M40::Param<1> progress,M40::Param<2> resumePossible) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::showProgressRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Title, FIELD_IN | FIELD_BOXED>>(title), MakeClientParam<Accessor<chain_fields::Progress, FIELD_IN>>(progress), MakeClientParam<Accessor<chain_fields::ResumePossible, FIELD_IN>>(resumePossible));
}
ProxyClient<ipc::capnp::messages::Chain>::M41::Result ProxyClient<ipc::capnp::messages::Chain>::handleNotifications(M41::Param<0> notifications) {
    typename M41::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::handleNotificationsRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Notifications, FIELD_IN | FIELD_BOXED>>(notifications), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M42::Result ProxyClient<ipc::capnp::messages::Chain>::waitForNotificationsIfTipChanged(M42::Param<0> oldTip) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::waitForNotificationsIfTipChangedRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::OldTip, FIELD_IN | FIELD_BOXED>>(oldTip));
}
ProxyClient<ipc::capnp::messages::Chain>::M43::Result ProxyClient<ipc::capnp::messages::Chain>::handleRpc(M43::Param<0> command) {
    typename M43::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::handleRpcRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Command, FIELD_IN | FIELD_BOXED>>(command), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M44::Result ProxyClient<ipc::capnp::messages::Chain>::rpcEnableDeprecated(M44::Param<0> method) {
    typename M44::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::rpcEnableDeprecatedRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Method, FIELD_IN | FIELD_BOXED>>(method), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M45::Result ProxyClient<ipc::capnp::messages::Chain>::rpcRunLater(M45::Param<0> name,M45::Param<1> fn,M45::Param<2> seconds) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::rpcRunLaterRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Name, FIELD_IN | FIELD_BOXED>>(name), MakeClientParam<Accessor<chain_fields::Fn, FIELD_IN | FIELD_BOXED>>(fn), MakeClientParam<Accessor<chain_fields::Seconds, FIELD_IN>>(seconds));
}
ProxyClient<ipc::capnp::messages::Chain>::M46::Result ProxyClient<ipc::capnp::messages::Chain>::getSetting(M46::Param<0> name) {
    typename M46::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getSettingRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Name, FIELD_IN | FIELD_BOXED>>(name), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M47::Result ProxyClient<ipc::capnp::messages::Chain>::getSettingsList(M47::Param<0> name) {
    typename M47::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getSettingsListRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Name, FIELD_IN | FIELD_BOXED>>(name), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M48::Result ProxyClient<ipc::capnp::messages::Chain>::getRwSetting(M48::Param<0> name) {
    typename M48::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::getRwSettingRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Name, FIELD_IN | FIELD_BOXED>>(name), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_BOXED>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M49::Result ProxyClient<ipc::capnp::messages::Chain>::updateRwSetting(M49::Param<0> name,M49::Param<1> update) {
    typename M49::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::updateRwSettingRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Name, FIELD_IN | FIELD_BOXED>>(name), MakeClientParam<Accessor<chain_fields::Update, FIELD_IN | FIELD_BOXED>>(update), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M50::Result ProxyClient<ipc::capnp::messages::Chain>::overwriteRwSetting(M50::Param<0> name,M50::Param<1> value,M50::Param<2> action) {
    typename M50::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::overwriteRwSettingRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Name, FIELD_IN | FIELD_BOXED>>(name), MakeClientParam<Accessor<chain_fields::Value, FIELD_IN | FIELD_BOXED>>(value), MakeClientParam<Accessor<chain_fields::Action, FIELD_IN>>(action), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M51::Result ProxyClient<ipc::capnp::messages::Chain>::deleteRwSettings(M51::Param<0> name,M51::Param<1> action) {
    typename M51::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::deleteRwSettingsRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Name, FIELD_IN | FIELD_BOXED>>(name), MakeClientParam<Accessor<chain_fields::Action, FIELD_IN>>(action), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::Chain>::M52::Result ProxyClient<ipc::capnp::messages::Chain>::requestMempoolTransactions(M52::Param<0> notifications) {
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::requestMempoolTransactionsRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Notifications, FIELD_IN | FIELD_BOXED>>(notifications));
}
ProxyClient<ipc::capnp::messages::Chain>::M53::Result ProxyClient<ipc::capnp::messages::Chain>::hasAssumedValidChain() {
    typename M53::Result result;
    clientInvoke(*this, &ipc::capnp::messages::Chain::Client::hasAssumedValidChainRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::ChainNotifications>::M0::Result ProxyClient<ipc::capnp::messages::ChainNotifications>::destroy(Super& super) {
    clientInvoke(super, &ipc::capnp::messages::ChainNotifications::Client::destroyRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::ChainNotifications>::M1::Result ProxyClient<ipc::capnp::messages::ChainNotifications>::transactionAddedToMempool(M1::Param<0> tx) {
    clientInvoke(*this, &ipc::capnp::messages::ChainNotifications::Client::transactionAddedToMempoolRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Tx, FIELD_IN | FIELD_BOXED>>(tx));
}
ProxyClient<ipc::capnp::messages::ChainNotifications>::M2::Result ProxyClient<ipc::capnp::messages::ChainNotifications>::transactionRemovedFromMempool(M2::Param<0> tx,M2::Param<1> reason) {
    clientInvoke(*this, &ipc::capnp::messages::ChainNotifications::Client::transactionRemovedFromMempoolRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Tx, FIELD_IN | FIELD_BOXED>>(tx), MakeClientParam<Accessor<chain_fields::Reason, FIELD_IN>>(reason));
}
ProxyClient<ipc::capnp::messages::ChainNotifications>::M3::Result ProxyClient<ipc::capnp::messages::ChainNotifications>::blockConnected(M3::Param<0> role,M3::Param<1> block) {
    clientInvoke(*this, &ipc::capnp::messages::ChainNotifications::Client::blockConnectedRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Role, FIELD_IN>>(role), MakeClientParam<Accessor<chain_fields::Block, FIELD_IN | FIELD_BOXED>>(block));
}
ProxyClient<ipc::capnp::messages::ChainNotifications>::M4::Result ProxyClient<ipc::capnp::messages::ChainNotifications>::blockDisconnected(M4::Param<0> block) {
    clientInvoke(*this, &ipc::capnp::messages::ChainNotifications::Client::blockDisconnectedRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Block, FIELD_IN | FIELD_BOXED>>(block));
}
ProxyClient<ipc::capnp::messages::ChainNotifications>::M5::Result ProxyClient<ipc::capnp::messages::ChainNotifications>::updatedBlockTip() {
    clientInvoke(*this, &ipc::capnp::messages::ChainNotifications::Client::updatedBlockTipRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::ChainNotifications>::M6::Result ProxyClient<ipc::capnp::messages::ChainNotifications>::chainStateFlushed(M6::Param<0> role,M6::Param<1> locator) {
    clientInvoke(*this, &ipc::capnp::messages::ChainNotifications::Client::chainStateFlushedRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Role, FIELD_IN>>(role), MakeClientParam<Accessor<chain_fields::Locator, FIELD_IN | FIELD_BOXED>>(locator));
}
ProxyClient<ipc::capnp::messages::ChainClient>::M0::Result ProxyClient<ipc::capnp::messages::ChainClient>::destroy(Super& super) {
    clientInvoke(super, &ipc::capnp::messages::ChainClient::Client::destroyRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::ChainClient>::M1::Result ProxyClient<ipc::capnp::messages::ChainClient>::registerRpcs() {
    clientInvoke(*this, &ipc::capnp::messages::ChainClient::Client::registerRpcsRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::ChainClient>::M2::Result ProxyClient<ipc::capnp::messages::ChainClient>::verify() {
    typename M2::Result result;
    clientInvoke(*this, &ipc::capnp::messages::ChainClient::Client::verifyRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::ChainClient>::M3::Result ProxyClient<ipc::capnp::messages::ChainClient>::load() {
    typename M3::Result result;
    clientInvoke(*this, &ipc::capnp::messages::ChainClient::Client::loadRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::ChainClient>::M4::Result ProxyClient<ipc::capnp::messages::ChainClient>::start(M4::Param<0> scheduler) {
    clientInvoke(*this, &ipc::capnp::messages::ChainClient::Client::startRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Scheduler, FIELD_IN>>(scheduler));
}
ProxyClient<ipc::capnp::messages::ChainClient>::M5::Result ProxyClient<ipc::capnp::messages::ChainClient>::flush() {
    clientInvoke(*this, &ipc::capnp::messages::ChainClient::Client::flushRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::ChainClient>::M6::Result ProxyClient<ipc::capnp::messages::ChainClient>::stop() {
    clientInvoke(*this, &ipc::capnp::messages::ChainClient::Client::stopRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::ChainClient>::M7::Result ProxyClient<ipc::capnp::messages::ChainClient>::setMockTime(M7::Param<0> time) {
    clientInvoke(*this, &ipc::capnp::messages::ChainClient::Client::setMockTimeRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Time, FIELD_IN>>(time));
}
ProxyClient<ipc::capnp::messages::ChainClient>::M8::Result ProxyClient<ipc::capnp::messages::ChainClient>::schedulerMockForward(M8::Param<0> time) {
    clientInvoke(*this, &ipc::capnp::messages::ChainClient::Client::schedulerMockForwardRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Time, FIELD_IN>>(time));
}
ProxyClient<ipc::capnp::messages::ActorCallback>::M0::Result ProxyClient<ipc::capnp::messages::ActorCallback>::call(M0::Param<0> request,M0::Param<1> response,M0::Param<2> lastCallback) {
    typename M0::Result result;
    clientInvoke(*this, &ipc::capnp::messages::ActorCallback::Client::callRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Request, FIELD_IN | FIELD_BOXED>>(request), MakeClientParam<Accessor<chain_fields::Response, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(response), MakeClientParam<Accessor<chain_fields::LastCallback, FIELD_IN>>(lastCallback), ClientException<std::exception, Accessor<chain_fields::Error, FIELD_OUT | FIELD_BOXED>>(), ClientException<UniValue, Accessor<chain_fields::RpcError, FIELD_OUT | FIELD_BOXED>>(), ClientException<UniValue::type_error, Accessor<chain_fields::TypeError, FIELD_OUT | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT>>(result));
    return result;
}
ProxyClient<ipc::capnp::messages::RunLaterCallback>::M0::Result ProxyClient<ipc::capnp::messages::RunLaterCallback>::destroy(Super& super) {
    clientInvoke(super, &ipc::capnp::messages::RunLaterCallback::Client::destroyRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::RunLaterCallback>::M1::Result ProxyClient<ipc::capnp::messages::RunLaterCallback>::call() {
    clientInvoke(*this, &ipc::capnp::messages::RunLaterCallback::Client::callRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::SettingsUpdateCallback>::M0::Result ProxyClient<ipc::capnp::messages::SettingsUpdateCallback>::destroy(Super& super) {
    clientInvoke(super, &ipc::capnp::messages::SettingsUpdateCallback::Client::destroyRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>());
}
ProxyClient<ipc::capnp::messages::SettingsUpdateCallback>::M1::Result ProxyClient<ipc::capnp::messages::SettingsUpdateCallback>::call(M1::Param<0> value) {
    typename M1::Result result;
    clientInvoke(*this, &ipc::capnp::messages::SettingsUpdateCallback::Client::callRequest, MakeClientParam<Accessor<chain_fields::Context, FIELD_IN | FIELD_BOXED>>(), MakeClientParam<Accessor<chain_fields::Value, FIELD_IN | FIELD_OUT | FIELD_BOXED>>(value), MakeClientParam<Accessor<chain_fields::Result, FIELD_OUT | FIELD_OPTIONAL>>(result));
    return result;
}
namespace {
ProxyTypeRegister t15995410751410148531{TypeList<interfaces::Chain>{}};
ProxyTypeRegister t11153687057566634041{TypeList<interfaces::Chain::Notifications>{}};
ProxyTypeRegister t16225999917376910712{TypeList<interfaces::ChainClient>{}};
} // namespace
} // namespace mp
