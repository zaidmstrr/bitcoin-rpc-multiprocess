// Generated by mpgen from /home/zaidmstrr/bitcoin/src/ipc/capnp/common.capnp

#ifndef CAPNP_COMMON_CAPNP_PROXY_TYPES_H
#define CAPNP_COMMON_CAPNP_PROXY_TYPES_H

#include <src/ipc/capnp/common.capnp.proxy.h>
#include <ipc/capnp/common-types.h>
namespace mp {
template<>
struct ProxyType<interfaces::BlockRef>
{
public:
    using Struct = ipc::capnp::messages::BlockRef;
    static decltype(auto) get(std::integral_constant<size_t, 0>) { return &interfaces::BlockRef::hash; }
    static decltype(auto) get(std::integral_constant<size_t, 1>) { return &interfaces::BlockRef::height; }
    static constexpr size_t fields = 2;
};
template<>
struct ProxyType<bilingual_str>
{
public:
    using Struct = ipc::capnp::messages::BilingualStr;
    static decltype(auto) get(std::integral_constant<size_t, 0>) { return &bilingual_str::original; }
    static decltype(auto) get(std::integral_constant<size_t, 1>) { return &bilingual_str::translated; }
    static constexpr size_t fields = 2;
};
} // namespace mp
#endif
