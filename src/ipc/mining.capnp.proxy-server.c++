// Generated by mpgen from /home/zaidmstrr/bitcoin/src/ipc/capnp/mining.capnp

#include <src/ipc/capnp/mining.capnp.proxy-types.h>
#include <mp/proxy-types.h>

namespace mp {
kj::Promise<void> ProxyServer<ipc::capnp::messages::Mining>::isTestChain(IsTestChainContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::Mining>::isInitialBlockDownload(IsInitialBlockDownloadContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::Mining>::getTip(GetTipContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_OPTIONAL | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::Mining>::waitTipChanged(WaitTipChangedContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(MakeServerField<1, Accessor<mining_fields::CurrentTip, FIELD_IN | FIELD_BOXED>>(MakeServerField<1, Accessor<mining_fields::Timeout, FIELD_IN>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())))));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::Mining>::createNewBlock(CreateNewBlockContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<1, Accessor<mining_fields::Options, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::destroy(DestroyContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(ServerDestroy()));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::getBlockHeader(GetBlockHeaderContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::getBlock(GetBlockContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::getTxFees(GetTxFeesContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::getTxSigops(GetTxSigopsContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::getCoinbaseTx(GetCoinbaseTxContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::getCoinbaseCommitment(GetCoinbaseCommitmentContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::getWitnessCommitmentIndex(GetWitnessCommitmentIndexContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::getCoinbaseMerklePath(GetCoinbaseMerklePathContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT | FIELD_BOXED>>(ServerCall())));
}
kj::Promise<void> ProxyServer<ipc::capnp::messages::BlockTemplate>::submitSolution(SubmitSolutionContext call_context) {
    return serverInvoke(*this, call_context, MakeServerField<0, Accessor<mining_fields::Context, FIELD_IN | FIELD_BOXED>>(MakeServerField<1, Accessor<mining_fields::Version, FIELD_IN>>(MakeServerField<1, Accessor<mining_fields::Timestamp, FIELD_IN>>(MakeServerField<1, Accessor<mining_fields::Nonce, FIELD_IN>>(MakeServerField<1, Accessor<mining_fields::Coinbase, FIELD_IN | FIELD_BOXED>>(Make<ServerRet, Accessor<mining_fields::Result, FIELD_OUT>>(ServerCall())))))));
}
} // namespace mp
